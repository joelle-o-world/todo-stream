#! /usr/local/bin/python3

import fileinput
import re

class TodoStream:
    def __init__(self):
        self.dict = {}

    pattern = "(TODO|DONE):\\s*(.+$)"

    def read(self, lines):
        for line in lines:
            self.readLine(line)

    def readLine(self, line):
        match = re.search(self.pattern, line)
        if match:
            status = match[1]
            message = match[2]
            self.update(message, status)

    def update(self, message, status):
        self.dict[message] = status

    def status(self, message):
        "Look up the status of the given message"
        if message in self.dict:
            return self.dict[message]
        else:
            pass

    def messagesByStatus(self):
        byStatus = {}
        for message in self.dict:
            status = self.dict[message]
            if status in byStatus:
                byStatus[status].append(message)
            else:
                byStatus[status] = [message]
        return byStatus

    def report(self):
        byStatus = self.messagesByStatus()
        for status in byStatus:
            for message in byStatus[status]:
                print(status+": " + message)
            print()



def diffTodoStreams(before, after):
    diff = TodoStream()
    for message in before.dict:
        if after.status(message) == None and before.status(message) != "DONE":
            diff.update(message, "DONE")
    for message in after.dict:
        status = after.status(message)
        if status != before.status(message):
            diff.update(message, status)
    return diff
        



import sys

# pipe mode
if len(sys.argv) == 1:
    todoStream = TodoStream()
    todoStream.read(fileinput.input())
    todoStream.report()
else:
    command = sys.argv[1]
    if command == "list":
        files = sys.argv[2:]
        if len(files) > 0:
            todos = TodoStream()
            for file in files:
                todos.read(open(file, "r"))
            todos.report()
        else:
            print("usage:\n\ttodo-stream list [...files]")
            print("Lists the todo items in the given files")
            print("\nPlease enter at least one file\n")

    elif command == "diff":
        args = sys.argv[2:]
        if len(args) == 2:
            beforeFile = args[0]
            afterFile = args[1]
            before = TodoStream()
            before.read(open(beforeFile, "r"))
            after = TodoStream()
            after.read(open(afterFile, "r"))
            diff = diffTodoStreams(before, after)
            diff.report()
        else :
            print("usage:\n\ttodo-stream diff <before-file> <after-file>")
            print("Create a todo time diff from two files")
            print("Please provide two files")


    else:
        print("Unexpected command: " + command)
